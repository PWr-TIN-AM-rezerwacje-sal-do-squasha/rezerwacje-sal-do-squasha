FORMAT: 1A
HOST: https://polls.apiblueprint.org/

# Pwr - Aplikacje mobilne
# Rezerwacja sal squasha



## All courts [/courts]

### Get all courts [GET]

+ Response 200 (application/json)

        [
             {
                "courtID": 5,
                "facilityID": 5,
                "courtNumber": 5
            }, {
                "courtID": 6,
                "facilityID": 6,
                "courtNumber": 6
            }, {
                "courtID": 7,
                "facilityID": 7,
                "courtNumber": 7
            }, {
                "courtID": 8,
                "facilityID": 8,
                "courtNumber": 8
            }
        ]


### Create new court [POST]

+ Request (application/json)

            {
                "courtID": 4,
                "facilityID": 4,
                "courtNumber": 4
            }

+ Response 201 (application/json)

    + Body

            {
                "courtID": 4,
                "facilityID": 4,
                "courtNumber": 4
            }


## Company [/company]

### List all companies [GET]

+ Response 200 (application/json)

        [
            {
                "companyID": 4, 
                "companyName": "Sport System", 
                "companyNIP": 6462933516, 
                "city": "Wroclaw", 
                "street": "Bagienna", 
                "buildingNumber": "1", 
                "postalCode": "51-522", 
                "localNumber": "1"
            },
            {
                "companyID": 5, 
                "companyName": "Sport", 
                "companyNIP": 9874654321, 
                "city": "Wroclaw", 
                "street": "Bagienna", 
                "buildingNumber": "2", 
                "postalCode": "51-522", 
                "localNumber": "3"
            }
        ]
        

### Add new company [PUT /company]

+ Request (application/json)

            {
                "companyName": "Sport System", 
                "companyNIP": 6462933516, 
                "city": "Wroclaw", 
                "street": "Bagienna", 
                "buildingNumber": "1", 
                "postalCode": "51-522", 
                "localNumber": "1"
            }

+ Response 204


### Get all info of company [GET /company/{id}]

+ Parameters
    + id: 4 (number) - An unique identifier company

+ Response 200 (application/json)

            {
                "companyID": 4, 
                "companyName": "Sport System", 
                "companyNIP": 6462933516, 
                "city": "Wroclaw", 
                "street": "Bagienna", 
                "buildingNumber": "1", 
                "postalCode": "51-522", 
                "localNumber": "1"
            }
            
### Get name of company [GET /company/name/{id}]

+ Parameters
    + id: 4 (number) - An unique identifier company

+ Response 200 (application/json)

            {
                "companyID": 4, 
                "companyName": "Sport System"
            }


### Update company [PUT /company/{id}]

+ Parameters
    + id: 4 (number) - An unique identifier company

+ Request (application/json)

            {
                "companyID": 4, 
                "companyName": "Sport System", 
                "companyNIP": 6462933516, 
                "city": "Wroclaw", 
                "street": "Bagienna", 
                "buildingNumber": "1", 
                "postalCode": "51-522", 
                "localNumber": "1"
            }

+ Response 204


### Delete company [DELETE /company/{id}]

+ Parameters
    + id: 4 (number) - An unique identifier company

+ Response 204



## Users [/users]
### All Users [GET /users/{?limit}]
A resource representing all of users in the system, limited by param *limit* (optional). Response is without user's password

+ Parameters

    + limit (number, optional) - The maximum number of results to return.
        + Default: `20`

+ Response 200 (application/json)

        [
            {
                "userID": 4, 
                "userName": "Jan", 
                "userSurname": "Kowalski", 
                "userEmail": "a@a.com", 
                "userBirthDate": "12-04-2005", 
                "userPhoneNumber": "123345789"
            },
            {
                "userID": 5, 
                "userName": "Marcin", 
                "userSurname": "Nowak", 
                "userEmail": "aaa@a.com", 
                "userBirthDate": "16-12-2005", 
                "userPhoneNumber": "879546123"
            },
            {
                "userID": 6, 
                "userName": "Piotr", 
                "userSurname": "Zbyniecki", 
                "userEmail": "asd@a.com", 
                "userBirthDate": "12-04-2003", 
                "userPhoneNumber": "987459385"
            }
        ]


### Check user password [POST /users]

+ Request (application/json)

            {
                "userPassword": "sadfuh3iHSIFHASUIDFHiohiudsgu", 
                "userEmail": "a@a.com", 
            }


+ Response 200 (application/json)

    + Body

            {    
                "data":    
                        {
                            "userID": 4, 
                            "userName": "Jan", 
                            "userSurname": "Kowalski"
                        },
                "status":"OK. Email and password correct"
            }
            
+ Response 201 (application/json)

    + Body

            {    
                "data":    
                        {
                            "userID": , 
                            "userName": "", 
                            "userSurname": ""
                        },
                "status":"Error. Email or password incorrect"
            }
            
                    
### Get user with specific ID [GET /users/{id}]

+ Parameters
    + id: 4 (number) - An unique identifier of user

+ Response 200 (application/json)

    + Body

            {
                "userID": 4, 
                "userName": "Jan", 
                "userSurname": "Kowalski", 
                "userPassword": "sadfuh3iHSIFHASUIDFHiohiudsgu", 
                "userEmail": "a@a.com", 
                "userBirthDate": "12-04-2005", 
                "userPhoneNumber": "123345789"
            }
            
### Get user name nad surname by ID [GET /users/name/{id}]

+ Parameters
    + id: 4 (number) - An unique identifier of user

+ Response 200 (application/json)

    + Body

            {
                "userID": 4, 
                "userName": "Jan", 
                "userSurname": "Kowalski"
            }





## Player [/player]
### Get player with specific ID [GET /player/{id}]
+ Parameters

    + id: 5 (number) - An unique identifier of player

+ Response 200 (application/json)

    + Body

            {
                "additionalPlayerID": 5, 
                "UserID": 6, 
                "reservationID": 10, 
                "IsCreator": [true], 
            }

### Get all player [GET /player/all]

+ Response 200 (application/json)

        [
             {
                "additionalPlayerID": 5, 
                "UserID": 6, 
                "reservationID": 10, 
                "IsCreator": [true],
            }, {
                "additionalPlayerID": 7, 
                "UserID": 10, 
                "reservationID": 11, 
                "IsCreator": [false],
            }, {
                "additionalPlayerID": 9, 
                "UserID": 15, 
                "reservationID": 12, 
                "IsCreator": [true],
            }, {
                "additionalPlayerID": 11, 
                "UserID": 17, 
                "reservationID": 13, 
                "IsCreator": [true],
            }
        ]


### Create new player [POST /player/create]

+ Request (application/json)

            {
               "additionalPlayerID": 20, 
                "UserID": 30, 
                "reservationID": 14, 
                "IsCreator": [true],
            }

+ Response 201 (application/json)

    + Body

            {
               "additionalPlayerID": 20, 
                "UserID": 30, 
                "reservationID": 14, 
                "IsCreator": [true],
            }

### Update player [PUT /player/{id}]

+ Parameters
    + id: 4 (number) - An unique identifier player

+ Request (application/json)

            {
                "additionalPlayerID": 20, 
                "UserID": 30, 
                "reservationID": 14, 
                "IsCreator": [true],
            }

+ Response 204


### Delete player [DELETE /player/{id}]

+ Parameters
    + id: 20 (number) - An unique identifier player

+ Response 204

#Group Facility

## All Facility [/facility]
A resource representing all of facilities in the system.
### Get all facility [GET]

+ Response 200 (application/json)

        [
             {
                "facilityID": 20, 
                "courtID": 30, 
                "companyID": 14, 
                "facilityName": "OSIR",
                "city": "Wrocław",
                "street": "Długa",
                "buildingNumber": "22a",
                "localNumber":" ",
                "postalCode":"55-158",
                "openingTime":"01:59:59.9999999",
                "closingTime":"23:59:59.9999999",
                "houerlyPrice": 50,
            }

## Facility [/facility/{id}]
### Get facility with specific ID [GET]
+ Parameters

    + id: 20 (number) - An unique identifier of facility

+ Response 200 (application/json)

    + Body

            {
               "facilityID": 20, 
                "courtID": 30, 
                "companyID": 14, 
                "facilityName": "OSIR",
                "city": "Wrocław",
                "street": "Długa",
                "buildingNumber": "22a",
                "localNumber":" ",
                "postalCode":"55-158",
                "openingTime":"01:59:59.9999999",
                "closingTime":"23:59:59.9999999",
                "houerlyPrice": 50,
            }

### Create new facility [POST]

+ Request (application/json)

            {
               "facilityID": 20, 
                "courtID": 30, 
                "companyID": 14, 
                "facilityName": "OSIR",
                "city": "Wrocław",
                "street": "Długa",
                "buildingNumber": "22a",
                "localNumber":" ",
                "postalCode":"55-158",
                "openingTime":"01:59:59.9999999",
                "closingTime":"23:59:59.9999999",
                "houerlyPrice": 50,
                
            }

+ Response 201 (application/json)

    + Body

            {
               "facilityID": 20, 
                "courtID": 30, 
                "companyID": 14, 
                "facilityName": "OSIR",
                "city": "Wrocław",
                "street": "Długa",
                "buildingNumber": "22a",
                "localNumber":" ",
                "postalCode":"55-158",
                "openingTime":"01:59:59.9999999",
                "closingTime":"23:59:59.9999999",
                "houerlyPrice": 50,
            }